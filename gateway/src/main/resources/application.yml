server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}

spring:
  application:
    name: gateway
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  config:
    import: "optional:configserver:http://localhost:8888"
  cloud:
    name: gateway
    config:
      import-check:
        enabled: false
    gateway:
      default-filters:
        - name: GlobalFilter
          args:
            baseMessage: Spring Cloud Gateway Global Filter
            preLogger: true
            postLogger: true
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/login
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/users
            - Method=POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/**
            - Method=GET, POST
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: flask-service
          uri: lb://FLASK-SERVICE
          predicates:
            - Path=/flask-service/**
            - Method= POST, GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/flask-service/(?<segment>.*), /$\{segment}
            - AuthorizationHeaderFilter

management:
  endpoints:
    web:
      exposure:
        include: refresh, beans, health, httptrace, busrefresh, info, metrics, prometheus

#Config server property
#token:
#  expiration_time: 8640000
#  secret: user_token